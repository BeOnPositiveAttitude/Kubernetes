# проверьте синтаксис перед тем как добавить что-либо
# используйте стандартные инструменты Linux для troubleshooting-а
# - рассмотрите возможность запуска busybox, если инструменты отсутствуют
# используйте "kubectl describe" чтобы посмотреть, что происходит
# используйте "kubectl logs" чтобы посмотреть, что делает контейнер в pod-е
# рассмотрите ограничения: мероприятия по логгированию на всех нодах не являются основной задачей K8s и обеспечиваются внешними проектами, подобно Fluentd или Prometheus
# в этом уроке мы сфокусируемся на командах kubectl, которые могут быть использованы

# в течении жизненного цикла pod проходит через различные состояния:
# - Pending: pod был валидирован API сервером и запись была создана в etcd, но образы еще нужно скачать
# - Running: на текущий момент pod успешно запущен
# - Succeeded: pod завершил свою работу
# - Failed: pod завершился, но что-то пошло не так
# - Unknown: статус pod-а не может быть получен
# текущий статус pod-а можно наблюдать, используя "kubectl get pods"

# без доступа к Internet: используйте "kubectl explain"
# - "kubectl explain" объясняет объекты API
# - для получения информации об определенной части объекта используйте dotted notation: "kubectl explain pod.spec"
# при наличии доступа в Internet: используйте https://kubernetes.io/docs
# - используйте опцию поиска для получения примеров
# - большинство полезных примеров находятся в секции Tasks документации
# - вам разрешен доступ к kubernetes.io/docs во время экзамена
