# как правило только один контейнер обслуживается pod-ом
# pod-ы с одним контейнером легче создавать и обслуживать
# золотое правило - если вы могли бы позволить разместить только одно приложение на одном сервере, тогда один контейнер в pod, если же по различным соображениям вы бы могли разместить два приложения на одном сервере, тогда два контейнера в одном pod
# существует несколько случаев, когда вы возможно захотите запустить несколько контейнеров в pod-е:
# - sidecar контейнер: контейнер, который улучшает главное приложение, например для логгирования
# - ambassador контейнер: контейнер, который представляет главный контейнер во внешний мир, такой как proxy
# - adapter контейнер: используется, чтобы принимать траффик или шаблон данных для соответствия траффику или шаблону данных в других приложениях в кластере
# когда используются мультиконтейнерные pod-ы, контейнеры обычно шарят данные через shared storage

# sidecar контейнер обеспечивает дополнительную функциональность для главного контейнера, где не имеет смысла запускать эту функциональность в отдельном pod-е
# представьте логгирование, мониторинг и синхронизацию
# суть в том, что главный контейнер и sidecar контейнер имеют доступ к общим ресурсам для обмена информацией
# часто shared volumes (глубоко обсуждается в дальнейшем) используются для этой цели

kubectl exec -it sidecar-pod -c sidecar /bin/bash   #имя pod-а = sidecar-pod, -c=container, имя контейнера в pod-е = sidecar
