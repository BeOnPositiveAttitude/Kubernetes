# K8s управляет pod-ами, внутри которых уже содержатся контейнеры
# pod может содержать несколько контейнеров, контейнеры в pod-е могут шарить общий volume
# pod имеет свой собственный ip-адрес
# как правило в K8s мы не управляем отдельными pod-ами, они помещаются в объект Deployment
# с помощью Deployment мы можем оперировать такими объектами как Replicas (Scalability) и Update Strategy
# для доступа к нашему приложению используется объект Service (используется в качестве LB)
# Service подключается к Deployment с помощью Labels
# конечный пользователь подключается к Service, который распределяет нагрузку по различным Deployment
# мы можем создать volume внутри pod, но если pod упадет, то упадет и volume
# в этом случаем нам поможет PV - Persistent Volume, pod может подключаться к PV через PVC (Persistent Volume Claim)
# Ingress - сущность над объектом Service, обеспечивает гибкий доступ к Service, конечный пользователь подключается к Ingress, а не напрямую к Service

# Pods: базовая единица в K8s; представляет собой набор контейнеров, использующих общие ресурсы, такие как IP-адрес и persistent storage volume
# Deployments: стандартный объект, который развертывается с K8s
# Services: делает Deployments доступными извне, предоставляя комбинацию IP/port. Services по умолчанию обеспечивает доступ к pod-ам в режиме round-robin, используя балансировщик нагрузки
# Ingress: публикует простой внешний доступ к Services
# Persistent Volumes: постоянное (сетевое) хранилище, которое может быть подмонтировано в контейнере с помощью Persistent Volume Claim
