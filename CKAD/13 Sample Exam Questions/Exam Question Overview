# Работа с NameSpaces
# Создайте NameSpace ckad-ns1 в вашем кластере. В этом NameSpace запустите следующие pod-ы
# 1. Pod с именем pod-a с запущенным образом httpd сервера
# 2. Pod с именем pod-b с запущенным образом nginx сервера, а также с образом rsyslog (alpine)

# Поиск pod-ов
# Какую команду вы должны использовать, чтобы найти все Deployments, который имеют label 'app', установленный в значение 'nginx'?

# Использование ConfigMaps
# В ckad-ns2 NameSpace запустите pod с именем alpine-pod. Этот pod должен запускать контейнер, основанный на образе alpine. В этом контейнере должен быть установлено две переменные:
# - 'localport' установлен в значение 'localhost:8082'
# - 'external_url' установлен в значение 'linux.com'

# Использование Sidecars
# Создайте Multi-container pod с именем sidecar_pod, который запускается в ckad-ns3 namespace.
# - главный контейнер должен запустить Busybox и писать output команды date в /var/log/date.log каждые 5 секунд
# - второй контейнер должен запускаться как sidecar и обеспечивать доступ к этому файлу, используя hostPath shared volume
# - убедитесь, чтоб образ для этого контейнера пулится только, если он еще недоступен на локальной системе

# Осмотр (inspecting) контейнеров
# Pod my-server запускает 3 контейнера: файл-сервер, лог-сервер и сервер БД. Когда pod стартует, лог-сервер падает. Какую команду вы должны использовать, чтобы проанализировать почему что-то пошло не так?

# Использование Probes
# Создайте pod запускающий httpd веб-сервер.
# - Веб-сервер должен предоставлять свой сервис на порту 80 и запускаться в ckad-ns3 namespace.
# - Этот pod должен использовать readiness probe с начальной задержкой (initial delay) в 60 секунд.
# - Probe должна проверять доступность document root веб-сервера (путь /) перед стартом, а также во время работы.
# - Каждая probes должна получать 60 секунд перед ее инициализацией.

# Создание Deployment
# Напишите манифест файл с именем nginx-exam.yaml, который соответствует следующим требованиям:
# - он стартует 5 реплик, которые запускает образ nginx:1.8
# - каждый pod имеет label app=webshop
# - создайте Deployment так, чтобы существующие pod-ы уничтожились перед тем как создадутся новые pod-ы, которые заменят их
# - сам Deployment должен использовать label service=nginx

# Exposing Services
# в ckad-ns6 NameSpace создайте Deployment, который запускает образ nginx 1.8 и дайте ему имя nginx-deployment.
# - гарантируйте, что он запускает3 реплики.
# - после проверки успешного запуска Deployment, опубликуйте его, чтобы внешние для кластера пользователи могли достучаться до него, используя объект K8s Service.

# Использование сетевых политик
# Создайте YAML файл с именем my-nw-policy, который запускает pod-а и сетевую политику.
# - Pod-ы могут быть "пустышками" и на самом деле не предоставлять определенной функциональности, 